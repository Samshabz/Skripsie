junkbackup

    # if bool_garbage == True: # for inbasic testing 
    #     rotation_angle = -estimate_affine_rotation(rotated_reference_image, inference_image) # this is from inf to ref. 
    #     # 6 to 7 should be + 65-43.5 = + 21.5. 7 to 6 should be -21.5. actually 22.31
    #     print(f"Rotation angle between images: {rotation_angle}")
    #     # lets take 6->7, it should rotate +. however, 6 is ref, 7 is inf. and we want to rotate the ref to match the inference. so yes + 21.5
    #     rotated_reference_image = rotate_image(rotated_reference_image, rotation_angle+inference_heading)
    #     inference_image = rotate_image(inference_image, inference_heading)
    #     rotation_anglecheck = -estimate_affine_rotation(rotated_reference_image, inference_image) # this is from inf to ref. 
    #     print(f"Rotation angle between images: {rotation_anglecheck}") # this config is right.
    # else:


    # rotation_angle = -estimate_affine_rotation(rotated_reference_image, inference_image)
    # rotated_reference_image = rotate_image(rotated_reference_image, rotation_angle + inference_heading)
    # inference_image = rotate_image(inference_image, inference_heading)
    # rotation_anglecheck = -estimate_affine_rotation(rotated_reference_image, inference_image) # this is from inf to ref. 
    # print(f"Rotation angle between images: {rotation_anglecheck}") # this config is right. 
    
    # # Step 3: Estimate translation using phase correlation 
    # shift, response = cv2.phaseCorrelate(np.float32(rotated_reference_image), np.float32(inference_image)) # this means from inference to reference
    # translation_x, translation_y = shift


    # translation_x, translation_y = get_shifts(None, None, kp1, kp2, des1, des2)





    # for now, pass in ref head for inference head.
    # reference_heading = inference_heading