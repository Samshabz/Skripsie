data_8D = {
    "DATSETROCK": [
        (79.35, -24.96, 79.29, -25.03, 0.63, 1.01, 0.4106249096803367, 0.5625451887026429),
        (351.89, -210.05, 351.90, -209.94, 0.40, 0.38, 6.347321834065951, 0.4522021533921361),
        (-41.98, 71.83, -41.99, 71.84, 0.15, 0.17, 0.4919940837426111, 0.5998898942489177),
        (344.66, 69.73, 345.32, 70.57, 6.24, 7.86, 8.922493589227088, 3.106460972689092),
        (287.26, 185.95, 286.86, 185.78, 6.56, 6.34, 7.123543665977195, 14.915304456837475),
        (-245.71, 193.51, -247.35, 194.09, 7.20, 5.92, 3.4512948177289218, 8.220391443464905),
        (-286.02, -187.80, -285.81, -187.71, 6.50, 6.20, 5.545740422210656, 13.060522352345288),
        (30.36, -4.58, 30.35, -4.57, 0.44, 0.39, 0.29003461671527475, 0.7211593477986753),
        (-30.34, 4.54, -30.34, 4.54, 0.47, 0.44, 0.2724090290721506, 0.6898993344511837),
        (-870.07, -77.17, -870.12, -77.22, 9.03, 9.05, 7.09463508927729, 8.649178725667298),
        (-690.37, 331.33, -690.82, 332.42, 11.64, 8.74, 5.016545326798223, 6.909283520653844),
        (45.85, -166.45, 44.58, -166.00, 6.31, 5.10, 6.6958138609770685, 3.2653156802989542),
        (-45.57, 166.41, -44.55, 165.91, 6.06, 5.05, 6.9917913974495605, 3.3103748846333474),
    ],
    "DATSETSAND": [
        (-113.26, -220.67, -113.73, -221.06, 11.26, 3.89, 14.299354437418515, 0.967697040992789),
        (94.08, 229.61, 94.46, 230.26, 11.17, 3.84, 12.777496167109348, 0.5544629913056269),
        (-87.15, 211.38, -87.77, 212.93, 6.10, 5.48, 6.802829382941127, 0.6148660879116505),
        (-168.06, 86.73, -167.91, 86.35, 8.80, 3.55, 4.66520625501289, 4.717242116341367),
        (234.82, 194.13, 235.43, 196.14, 8.52, 5.92, 12.89045627284213, 7.612277167150751),
        (144.23, 281.88, 146.58, 282.20, 9.18, 7.50, 8.75591399995028, 1.257815546123311),
        (331.25, 145.28, 330.89, 145.66, 10.61, 5.60, 7.412718614883488, 7.791740571032278),
        (-16.64, -221.01, -15.02, -221.57, 4.90, 4.93, 7.4266966952127405, 6.40337380557321),
        (256.05, -101.59, 256.18, -101.95, 4.88, 4.01, 6.909820258588297, 5.1212098444812),
        (-256.38, 100.33, -256.65, 100.70, 4.24, 3.37, 6.338823013618821, 4.681443930021487),
        (-375.66, -127.82, -373.61, -125.91, 7.15, 6.48, 7.848860183235956, 5.603026318829507),
        (332.69, 222.47, 331.54, 221.30, 5.71, 6.93, 5.742348175612278, 8.347678562975489),
        (34.25, 392.85, 35.87, 396.80, 10.94, 15.32, 20.1843260730966, 7.041540907812305),
    ],


    # Proceeding to the fifth dataset, DATSETAMAZ, without code block
    "DATSETAMAZ": [
        (-171.02, 146.30, -170.02, 144.18, 10.58, 5.47, 3.588569939136505, 2.0770310518419137),
        (302.21, 176.00, 303.15, 177.23, 11.52, 7.32, 2.8779918293002993, 20.528687827827525),
        (36.38, -171.46, 36.20, -171.48, 9.68, 9.18, 8.109410324133933, 4.129964684587321),
        (11.06, 356.98, 10.12, 355.34, 9.25, 3.98, 12.21933000953868, 5.1358169171144255),
        (-96.37, -207.10, -94.78, -207.26, 5.12, 7.16, 1.9817497613839805, 5.720063428438152),
        (-66.62, -75.42, -66.01, -75.75, 4.43, 3.47, 6.014832997927442, 2.7648830862890463),
        (18.89, 99.38, 18.17, 99.02, 4.12, 3.45, 7.236823498969898, 3.091872165343375),
        (162.11, -221.95, 163.53, -225.01, 8.86, 9.66, 5.687606292543933, 5.733120369099197),
        (-250.04, 131.83, -250.70, 132.99, 10.34, 4.43, 0.0848762325476855, 16.78494854189921),
        (-6.74, -225.72, -8.35, -226.68, 6.28, 9.74, 1.1900351135991514, 3.859094404033385)
    ],


    "DATSETROT": [
        (139.66, -253.98, 137.58, -254.03, 7.22, 4.89, 2.4618742798338644, 17.038849375327118),
        (7.49, 291.25, 9.49, 291.37, 7.41, 5.09, 4.036014161945786, 16.934648461057805),
        (167.96, -348.84, 164.44, -348.07, 8.92, 6.36, 22.214430221589282, 0.6229972068686038),
        (-10.49, -289.49, -12.63, -289.64, 6.25, 4.96, 19.183030492276885, 17.113458179868758),
        (176.63, 233.69, 177.39, 235.18, 6.20, 4.85, 15.774315837188624, 17.868839864968322),
        (38.30, 344.59, 35.09, 344.53, 8.99, 5.92, 13.421136945311446, 13.3111138548702),
        (-19.01, 387.46, -21.37, 387.74, 10.37, 6.71, 8.720308114716318, 7.771347245317884),
        (-56.49, -176.20, -54.21, -176.07, 5.90, 4.36, 1.2751460380386561, 0.35850128694437444),
        (-15.70, 184.94, -17.54, 184.96, 5.58, 3.80, 2.301605478976853, 0.7540842578746378),
        (-156.97, 293.54, -159.49, 294.04, 8.44, 5.35, 5.185504172928631, 12.176312817959115),
        (-33.92, 306.37, -31.45, 306.77, 6.28, 5.84, 7.764651849342044, 13.403398612281308),
        (-6.39, 309.08, -4.10, 309.19, 6.31, 5.94, 0.4421147529501468, 11.966657437034883),
        (8.06, 324.21, 10.70, 324.03, 7.37, 5.97, 7.926446496974677, 6.94705755088944),
    ],

    "DATSETCPT": [
        (57.44, -346.28, 56.25, -346.97, 11.49, 14.95, 9.990031599416398, 2.0278658394236118),
        (-62.25, 347.11, -60.74, 348.75, 12.07, 14.10, 5.02695131872315, 2.860202264972031),
        (319.48, -200.54, 319.08, -199.84, 12.04, 7.62, 0.15260612615384161, 2.724297154461965),
        (-320.48, 199.94, -320.32, 199.39, 12.83, 8.14, 1.018840710283257, 2.119316685711965),
        (-199.49, 287.11, -197.53, 287.78, 16.56, 12.19, 0.620787649648264, 0.8339353164192289),
        (-324.41, 221.34, -325.27, 220.53, 13.16, 9.87, 1.2844400831963867, 2.325088336132467),
        (-241.62, 289.79, -243.26, 288.18, 17.04, 11.21, 2.1804337112698704, 1.422054867260158),
        (-398.01, -214.62, -396.69, -214.19, 12.11, 9.35, 0.08158580784220248, 0.64027219847776),
        (-406.70, -11.27, -407.32, -10.61, 9.04, 4.62, 0.9903656039386988, 0.8197911847382784),
        (-322.23, -36.10, -322.62, -35.89, 8.33, 4.12, 0.7594522722065449, 0.4808146823197603),
        (322.33, 33.78, 322.70, 33.52, 8.22, 3.96, 1.2894184059696272, 2.799669967731461),
        (200.43, -313.86, 199.03, -313.32, 13.92, 13.67, 3.421069965348579, 0.9686759631149471),
        (-201.36, 313.40, -201.02, 312.26, 12.92, 11.86, 2.6030283332802355, 0.5085319201461971),
        (-279.14, 249.49, -277.45, 252.03, 14.88, 11.36, 0.6026238907361403, 2.696660863002762),
    ]

}
import numpy as np

# Initialize arrays to store optimal gradients for each dataset
optimal_gradients_x = {}
optimal_gradients_y = {}

# Looping through each dataset in data_8D to calculate optimal gradients
for dataset_name, data in data_8D.items():
    # Extracting relevant columns
    mean_x = np.array([point[0] for point in data])  # Mean x
    median_x = np.array([point[2] for point in data])  # Median x
    dev_x = np.array([point[6] for point in data])  # Error x pixels

    mean_y = np.array([point[1] for point in data])  # Mean y
    median_y = np.array([point[3] for point in data])  # Median y
    dev_y = np.array([point[7] for point in data])  # Error y pixels

    # Calculating the gradients for mean_x - median_x with respect to dev_x
    mean_median_diff_x = mean_x - median_x
    optimal_gradient_x = np.polyfit(mean_median_diff_x, dev_x, 1)[0]  # Linear fit slope

    # Calculating the gradients for mean_y - median_y with respect to dev_y
    mean_median_diff_y = mean_y - median_y
    optimal_gradient_y = np.polyfit(mean_median_diff_y, dev_y, 1)[0]  # Linear fit slope

    # Storing results in the dictionaries
    optimal_gradients_x[dataset_name] = optimal_gradient_x
    optimal_gradients_y[dataset_name] = optimal_gradient_y

optimal_gradients_x, optimal_gradients_y  # Returning the optimal gradient
print(optimal_gradients_x, optimal_gradients_y)