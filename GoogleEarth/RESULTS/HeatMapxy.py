import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

# New PIX_DIFF data for each dataset
pix_diff_DATSETROT2 = [
    (0.33239685794291063, 2.059616759221214),
    (0.6145993658074076, 0.1574390668813379),
    (0.02349871672078052, 0.8203588241936473),
    (1.0791716115128906, 0.8021922298594859),
    (2.1417205835045365, 0.9767461595248506),
    (2.1734971709462627, 0.11850400240723502),
    (0.05715811635299062, 0.8714537476654414),
    (0.6523816745649498, 0.3352273737478413),
    (0.8346860503840503, 1.041619708008156),
    (0.24249669621278258, 0.15036996005675007),
    (0.22063542770041522, 2.4622299286060194),
    (0.35119397727629575, 0.07274857965582271),
    (1.0043342545957898, 0.4704331884541091),
    (0.3819234232977351, 0.09541867833704032)
]

pix_diff_DATSETCPT2 = [
    (0.6641657887669652, 0.5776926355358114),
    (0.6307745998087739, 1.0473239625985968),
    (0.8068444938176071, 0.5035770143564093),
    (0.7748877409364923, 0.46985509052828434),
    (0.9079919954763795, 0.4881546189400865),
    (1.004579576031091, 0.16049240947523913),
    (0.22564584017135303, 1.3634233056687322),
    (0.4972943594828507, 1.0871037169389126),
    (0.7018540401455766, 0.721606853828499),
    (0.28382955016854794, 0.5643674850992326),
    (0.277494864920925, 0.5483953476480607),
    (0.7477604713136259, 0.6594433959435833),
    (0.5336588412184256, 0.35455051442707486),
    (0.5110430615811765, 0.35722080251301236)
]

pix_diff_DATSETROCK2 = [
    (0.7618887060186879, 0.6111791983374673),
    (4.919941959719381, 2.1489389957217497),
    (0.7853595402309423, 0.32991031251386005),
    (2.185016207113563, 3.68496013014952),
    (0.04858953265716082, 1.8177247236283165),
    (2.146211902494798, 1.0468627634297718),
    (0.19370672749147388, 1.9603833409545928),
    (0.663223096690615, 2.6829216034796843),
    (0.013505870140672727, 0.2675259298634374),
    (0.018758579650739904, 0.27162378067746795),
    (1.5823218001294208, 5.9738863641857165),
    (0.13770589092627006, 0.10319627725002078),
    (0.4869682730556306, 0.6801287475768163),
    (0.48101871336740487, 0.6335238950670146)
]

pix_diff_DATSETSAND2 = [
    (0.061425862208523085, 0.415385282406163),
    (0.40360536352488907, 0.2963476843743251),
    (0.33580836551659843, 0.26055232972251474),
    (0.10523624650841157, 0.31767680289402733),
    (1.7749796538293765, 0.3878787608194898),
    (1.2641290632915485, 0.03777791623815574),
    (0.3470543078601622, 0.10976827135948497),
    (0.8089403142918172, 2.7474064267442486),
    (0.5809119037349006, 0.6468901198228139),
    (0.44121567890860547, 0.4281066866441279),
    (0.43157691179919766, 0.4325014162337766),
    (0.3842202603173064, 0.5236652172537504),
    (0.7592154370829718, 0.6446005907266681),
    (0.24966738903316354, 0.2724261965892083)
]

pix_diff_DATSETAMAZ2 = [
    (1.055629307909129, 0.7475791585920604),
    (0.3349520441818328, 0.5218683935740387),
    (0.27919911653107476, 0.12709138106643536),
    (0.33949848194897214, 0.027374719484043908),
    (0.4348624943601749, 0.03205806371124709),
    (0.4620037171512763, 1.920984325205854),
    (0.1557074520588344, 0.3031749207227179),
    (0.5779578670711771, 0.041457845901987866),
    (0.08380327515581598, 0.5220766077215444),
    (0.3259375976413992, 0.5418573467367196),
    (0.23720034323927308, 0.4816042292802365),
    (0.29432055475490415, 2.1042140930461493),
    (0.6246285795342601, 1.3942016301514322),
    (0.2741159012993819, 0.02127718484422303)
]

# Compile all PIX_DIFF data
all_pix_diff = pix_diff_DATSETROT2 + pix_diff_DATSETCPT2 + pix_diff_DATSETROCK2 + pix_diff_DATSETSAND2 + pix_diff_DATSETAMAZ2

# Calculate pixel changes for x and y coordinates
x_changes_all = [x for x, y in all_pix_diff]
y_changes_all = [y for x, y in all_pix_diff]

# Set bin size
bin_size = 1

# Step 1: Round off the changes to create bins with a bin size of 1 pixel
x_bins = np.round(np.array(x_changes_all) / bin_size).astype(int)
y_bins = np.round(np.array(y_changes_all) / bin_size).astype(int)

# Step 2: Create a DataFrame for frequency counting
data = pd.DataFrame({'x': x_bins, 'y': y_bins})

# Step 3: Create a pivot table for heatmap
heatmap_data = data.pivot_table(index='y', columns='x', aggfunc='size', fill_value=0)

# Step 4: Generate the heatmap with larger font sizes
plt.figure(figsize=(12, 10))
sns.heatmap(heatmap_data, cmap='YlGnBu', cbar_kws={'label': 'Frequency', 'format': '%.0f'}, annot=True, annot_kws={'size': 24})
plt.title('Heatmap of Pixel Changes', fontsize=22)
plt.xlabel(f'X Changes (binned in {bin_size}-pixel intervals)', fontsize=26)
plt.ylabel(f'Y Changes (binned in {bin_size}-pixel intervals)', fontsize=26)
plt.xticks(fontsize=24)
plt.yticks(fontsize=24)
# plt.show()
cbar = plt.gca().collections[0].colorbar
cbar.ax.tick_params(labelsize=24)  # Set color bar tick font size
cbar.set_label('Frequency', fontsize=26)  # Color bar label font size


import os

directory = "./REPORT/stellenbosch_ee_report_template-master/Chapter 5/RESULTPLOTS"

# Create the directory if it doesn't exist
os.makedirs(directory, exist_ok=True)

file_name = f"{directory}/XYHEAT.png"
plt.savefig(file_name)  # Save the figure as a PNG file
plt.close()  # Close the figure

