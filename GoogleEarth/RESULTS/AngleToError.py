# For Dataset DATSETROT
data_DATSETROT = [
    (-30.2358, 2.9677613046369515, 17.0333477697568),
    (30.2598, 4.2593709558132105, 16.906956266029738),
    (-30.9696, 22.27640573075041, 0.5338112388271838),
    (-34.6999, 19.115057199378498, 17.14878983714152),
    (34.7208, 15.583852862357162, 17.907808761461638),
    (-25.6276, 13.291002958547324, 13.379415676696226),
    (-14.4525, 8.75202436291147, 7.8536059827310964),
    (22.3594, 1.3706357227056287, 0.31136357330251485),
    (-22.3238, 2.1570693606045097, 0.3491435628384352),
    (-25.0478, 4.912032325868495, 12.178699622745626),
    (18.4058, 7.4819294609478675, 14.051942640566267),
    (25.5511, 0.1968855375307612, 11.943412819760852),
    (20.0268, 8.200200866325758, 6.795929492916912)
]

# For Dataset DATSETCPT
data_DATSETCPT = [
    (0.4335, 10.1514833093388, 1.6780495180282742),
    (-0.2436, 5.053376771393232, 2.8719582099001855),
    (0.1056, 0.005244561587460339, 2.564304561819881),
    (-0.1153, 0.8845112274866551, 2.1261789514683187),
    (-0.1015, 0.6374386198585853, 0.7839276203885674),
    (-0.2880, 1.421357335173525, 2.317404666217044),
    (0.0838, 2.0924849521834403, 1.4449164683464915),
    (-0.3321, 0.1675228908425197, 0.6843227541539818),
    (-0.6878, 0.9138777441112325, 0.9161983889061958),
    (-0.4014, 0.6227295699063689, 0.47955394187010825),
    (0.4051, 1.3503554579801857, 2.667904619127512),
    (0.9985, 3.3826761888340116, 1.0026459940709174),
    (0.0766, 3.0926593880867586, 0.376577879069373),
    (-0.2450, 0.485828960663639, 2.7050733966752887)
]

# For Dataset DATSETROCK
data_DATSETROCK = [
    (-42.3663, 0.4147474695928395, 0.5568974188063294),
    (-42.3661, 6.414213732467033, 0.41689306567423046),
    (42.2149, 0.49736122600734234, 0.5960298199206591),
    (92.1302, 8.946357562788762, 3.100730416830629),
    (0.3564, 7.141413852805272, 14.899518872611225),
    (-43.2093, 3.442452546209097, 8.19546249252744),
    (-0.2771, 5.5636481285328045, 13.044767285464332),
    (0.0426, 0.27674777316860855, 0.7098862030543387),
    (-0.0452, 0.27469476719852537, 0.6902014117222279),
    (-1.9337, 7.068307212204672, 8.785352094564587),
    (-0.4338, 4.960101743694395, 6.934766730759293),
    (0.0136, 6.689469659002498, 3.252062113955617),
    (0.0105, 6.606463676202111, 3.16864231438376)
]

# For Dataset DATSETSAND
data_DATSETSAND = [
    (4.9352, 14.305478388356278, 0.9728350488003343),
    (-4.9604, 12.764282966934843, 0.5533055937848985),
    (-29.3813, 6.744359044765588, 0.6218424665275961),
    (-55.7242, 4.695686871680664, 4.6911363046383485),
    (40.7614, 12.877683232742129, 7.607318937894888),
    (17.3089, 8.74766464321874, 1.264026170130819),
    (22.7897, 7.4343419952492695, 7.794893707614392),
    (28.4028, 7.417785305297002, 6.397642646101303),
    (0.2853, 6.897082309646066, 5.117048720479943),
    (-0.2308, 6.389422278502025, 4.587023132713512),
    (14.6958, 7.869126342528034, 5.608433783403598),
    (-14.7662, 5.762823240656871, 8.35312482342124),
    (-18.1687, 20.28295222640736, 7.160481109749526)
]

# For Dataset DATSETAMAZ
data_DATSETAMAZ = [
    (-163.5877, 4.437675472116098, 2.334032681712415),
    (31.1906, 3.838301394600421, 19.900992244380177),
    (0.0799, 8.246437760535628, 3.8290019572596066),
    (-177.5825, 12.070719353621826, 5.731099814249319),
    (19.6272, 2.9782928687054664, 5.733449552135426),
    (30.4767, 6.989721491700038, 2.987240958274924),
    (-30.5948, 7.910833396017551, 3.132800462000887),
    (25.9969, 4.837896328652278, 5.800454812968383),
    (-25.8598, 0.9918001461774111, 16.272924030869035),
    (-26.2511, 1.4750502684619278, 3.4825466685870197)
]














data_DATSETROT = [
    (40.6909, 20.477794205857663, 56.70527184990107),
    (71.0586, -25.048994023283967, -42.596869066489205),
    (-14.0780, 76.61578372527597, -10.638658071868576),
    (-48.7602, 47.05437475484689, -70.31970406526011),
    (-14.0780, -30.373356877435185, 93.83876987295082),
    (0.0000, -20.17055410745661, -12.409157822123007),
    (-21.6922, -60.550642666148974, 78.46093852516265),
    (0.0000, 7.206133142726628, 63.11370699831218),
    (65.7922, 5.235178769079539, 3.6491354666286497),
    (43.4843, -11.817487720362578, -8.288202472940668),
    (65.7922, -4.534283881826013, -71.83081176104416),
    (90.6823, 20.958070459893634, -47.176032121285715),
    (72.3186, -4.322165451463661, -33.660314973499624)
]

data_DATSETCPT = [
    (0.0000, -23.903741419745785, -15.242361454112825),
    (0.0000, 19.79895206098257, 11.554822264473614),
    (0.0000, -15.743704482778867, -2.824832706487882),
    (0.0000, 10.207660354674317, 3.1380814833649993),
    (0.0000, 18.324568714447878, -16.36601729701613),
    (0.0000, 0.7510109224160715, -2.4537397196992288),
    (0.0000, -10.680716860041912, -2.368696741392341),
    (0.0000, 0.3243855991070177, -4.4462139093089945),
    (0.0000, 4.540952308215083, 2.1468903172035922),
    (0.0000, -4.645573751435222, 1.6276352603791508),
    (0.0000, 2.298851825085876, -9.838564978144916),
    (0.0000, -4.305604239559898, -12.420703449697271),
    (0.0000, 16.212423767857786, -4.7788534952291)
]


data_DATSETROCK = [
    (-42.3000, 1.6225632844423217, 3.4025791191691326),
    (0.0000, 21.16500648671058, 7.6882491944160165),
    (0.0000, -2.1229308403757727, -3.9150620416224626),
    (0.0000, 39.233402755186944, -8.650675285206546),
    (0.0000, 7.543426664160506, -50.084583986807274),
    (-42.3000, 0.7475659782687387, -24.848518536727966),
    (0.0000, -6.738751745704803, 47.694137593799155),
    (0.0000, -1.5250772090596456, -12.77064868516851),
    (0.0000, 0.6379652127336328, -2.0230650888683375),
    (0.0000, -0.4434131770553762, 2.003462448169815),
    (0.0000, -19.13718312757419, 24.405801279901567),
    (0.0000, 6.550212760690556, 16.73459135302278),
    (0.0000, -24.64408032183229, 15.507361374122695)
]

data_DATSETSAND = [
    (8.5015, 36.16015339867337, -2.6970115508411254),
    (3.2540, -31.12128389298789, 1.5590236921595988),
    (8.5015, -26.69521160301798, 0.12254056478241182),
    (37.1826, 12.665495564785829, -12.255765056174184),
    (94.6807, -47.65342755628501, -10.650559370397218),
    (53.0634, -25.081615736979018, 6.248192617567838),
    (-21.1675, 20.50775486570467, -27.06305532233938),
    (0.9330, 7.775919790171997, 31.40517027470787),
    (-19.8325, 24.332526417051156, -13.976798884437358),
    (-19.4135, 28.09410028054947, 17.1720388383618),
    (-19.8325, -26.423586143484272, -16.404417473975286),
    (20.7191, 18.557468553874173, 0.7415808262306882),
    (5.8448, -12.45739135469546, 12.575995134003165)
]


data_DATSETAMAZ = [
    (0.0000, 15.334195042487067, 14.497054510200826),
    (-193.4544, 32.987996874681585, -79.7325357527634),
    (-179.9399, -17.454789065601588, 4.987446077273489),
    (-179.6239, 21.90376717058274, -3.7031815726160175),
    (-179.9399, 20.335397112354883, -12.949943456940673),
    (-179.6313, 35.86536259764946, -54.00398909995033),
    (-2.0305, -22.077303909864213, 48.009352637509835),
    (-48.2689, -41.78359281966232, 1.653413306484424),
    (-28.6758, 25.850602943921103, 13.707420763130187),
    (2.6868, -15.582732795347113, 1.6318075830180874),
    (-28.6758, 24.45689283047537, -0.470190662875666),
    (2.6868, 3.7865938652567017, 14.41544617654472),
    (18.7565, 8.784210873378242, 55.676848001054836)
]











import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import linregress# Function to calculate radial pixel error

def calculate_radial_error(x, y):
    return np.sqrt(x**2 + y**2)

# Function to apply a rotation matrix based on an angle (in degrees)
def rotate_vector(x, y, angle_deg):
    angle_rad = np.radians(angle_deg)
    rotation_matrix = np.array([[np.cos(angle_rad), -np.sin(angle_rad)],
                                [np.sin(angle_rad),  np.cos(angle_rad)]])
    vector = np.array([x, y])
    return np.dot(rotation_matrix, vector)

# Given datasets with angle, x error, and y error
datasets = {
    "DATSETROT": data_DATSETROT,
    # Uncomment other datasets as needed
    # "DATSETCPT": data_DATSETCPT,
    # "DATSETROCK": data_DATSETROCK,
    # "DATSETSAND": data_DATSETSAND,
    # "DATSETAMAZ": data_DATSETAMAZ,
}

# Collect angle and radial error data
angles = []
radial_errors = []
rotated_radial_errors = []

# Loop through datasets and calculate radial error
for dataset_name, data in datasets.items():
    for angle, x_err, y_err in data:
        # Calculate the original radial error using internal coordinates
        radial_error = calculate_radial_error(x_err, y_err)
        radial_errors.append(radial_error)

        # Simulate the effect of applying a rotation matrix with the ground truth angle
        rotated_x, rotated_y = rotate_vector(x_err, y_err, angle)
        rotated_radial_error = calculate_radial_error(rotated_x, rotated_y)
        rotated_radial_errors.append(rotated_radial_error)
        
        # Store the internal angle
        angles.append(angle)

# Convert to numpy arrays for processing
angles = np.array(np.abs(angles))
radial_errors = np.array(radial_errors)
rotated_radial_errors = np.array(rotated_radial_errors)

# Perform linear regression for line of best fit
slope, intercept, r_value, _, _ = linregress(angles, rotated_radial_errors)
line_of_best_fit = slope * angles + intercept

# Create scatter plot
plt.figure(figsize=(10, 6))
plt.scatter(angles, radial_errors, label='Original Radial Errors', alpha=0.7)
plt.scatter(angles, rotated_radial_errors, label='Rotated Radial Errors', alpha=0.7, color='orange')
plt.plot(angles, line_of_best_fit, color='red', label=f'Best Fit Line (r = {r_value:.2f})')

# Annotations and labels
plt.title('Scatter Plot of Radial Pixel Errors vs Internal Angle')
plt.xlabel('Internal Angle (degrees)')
plt.ylabel('Radial Pixel Error')
plt.legend()
plt.show()

# Output correlation coefficient (r)
print(f"Correlation coefficient (r): {r_value:.2f}")